{% import (
    "fmt"

    "github.com/tiehuis/gorum/model"
    "github.com/tiehuis/gorum/util"
) %}

{% code
type ThreadPage struct {
    Board model.Board
    Posts []model.Post
}
%}

{% func (tp *ThreadPage) Body() %}
<table>
<tbody>

    {%= NavbarRow(tp.Board) %}
    <tr><td><br><td/></tr>

    {% if len(tp.Posts) <= 200 %}
        {%= PostBoxRow(fmt.Sprintf(`/board/%s/%v`, tp.Board.Code, tp.Posts[0].Id)) %}
    {% else %}
        <tr><td>Reached post limit!</td></tr>
    {% endif %}
    <tr><td><br></td></tr>

    {% for _, p := range tp.Posts %}
        <tr>
        <td id="{%v p.Id %}" class="post-table">
            <div class="comment-header">
                <span><a href="/board/{%s tp.Board.Code %}/{%v tp.Posts[0].Id %}#{%v p.Id %}">{%v p.Id %}</a></span>
                <span>{%v p.PostedAt %}</span>
            </div>
            <br>
            <div class="comment">
                {%s= util.FormatPost(p.Content) %}
            </div>
        </td>
        </tr>
    {% endfor %}

</tbody>
</table>
{% endfunc %}
