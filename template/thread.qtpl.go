// This file is automatically generated by qtc from "thread.qtpl".
// See https://github.com/valyala/quicktemplate for details.

//line template/thread.qtpl:1
package template

//line template/thread.qtpl:1
import (
	"github.com/tiehuis/gorum/model"
)

//line template/thread.qtpl:5
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line template/thread.qtpl:5
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line template/thread.qtpl:6
type ThreadPage struct {
	Board model.Board
	Posts []model.Post
}

//line template/thread.qtpl:12
func (tp *ThreadPage) StreamBody(qw422016 *qt422016.Writer) {
	//line template/thread.qtpl:12
	qw422016.N().S(`
<pre>
    <span><a href="/">Home</a></span>
    <h3><a href="/board/`)
	//line template/thread.qtpl:15
	qw422016.E().S(tp.Board.Code)
	//line template/thread.qtpl:15
	qw422016.N().S(`">/`)
	//line template/thread.qtpl:15
	qw422016.E().S(tp.Board.Code)
	//line template/thread.qtpl:15
	qw422016.N().S(`/ - `)
	//line template/thread.qtpl:15
	qw422016.E().S(tp.Board.Name)
	//line template/thread.qtpl:15
	qw422016.N().S(`</a></h3>

    <div><label for="show-new-post">+[New Post]</label></div>
    <input id="show-new-post" type=checkbox>
    <div id="new-post" class="hidden">
        <form action="/board/`)
	//line template/thread.qtpl:20
	qw422016.E().S(tp.Board.Code)
	//line template/thread.qtpl:20
	qw422016.N().S(`/`)
	//line template/thread.qtpl:20
	qw422016.E().V(tp.Posts[0].Id)
	//line template/thread.qtpl:20
	qw422016.N().S(`" method="post">
            <textarea required name="content" spellcheck="true" rows="2" maxlength="2000" placeholder="New Post"></textarea>
            <input type="submit" value="send">
        </form>
    </div>

    <table>
    <tr>
        <th>post</th>
        <th>content</th>
    </tr>
    `)
	//line template/thread.qtpl:31
	for _, p := range tp.Posts {
		//line template/thread.qtpl:31
		qw422016.N().S(`
        <tr>
            <td>`)
		//line template/thread.qtpl:33
		qw422016.E().V(p.Id)
		//line template/thread.qtpl:33
		qw422016.N().S(`</td>
            <td>`)
		//line template/thread.qtpl:34
		qw422016.E().S(p.Content)
		//line template/thread.qtpl:34
		qw422016.N().S(`</td>
        </tr>
    `)
		//line template/thread.qtpl:36
	}
	//line template/thread.qtpl:36
	qw422016.N().S(`
    </table>
</pre>
`)
//line template/thread.qtpl:39
}

//line template/thread.qtpl:39
func (tp *ThreadPage) WriteBody(qq422016 qtio422016.Writer) {
	//line template/thread.qtpl:39
	qw422016 := qt422016.AcquireWriter(qq422016)
	//line template/thread.qtpl:39
	tp.StreamBody(qw422016)
	//line template/thread.qtpl:39
	qt422016.ReleaseWriter(qw422016)
//line template/thread.qtpl:39
}

//line template/thread.qtpl:39
func (tp *ThreadPage) Body() string {
	//line template/thread.qtpl:39
	qb422016 := qt422016.AcquireByteBuffer()
	//line template/thread.qtpl:39
	tp.WriteBody(qb422016)
	//line template/thread.qtpl:39
	qs422016 := string(qb422016.B)
	//line template/thread.qtpl:39
	qt422016.ReleaseByteBuffer(qb422016)
	//line template/thread.qtpl:39
	return qs422016
//line template/thread.qtpl:39
}
